@model ScreenTimeManager.Models.TotalScreenTimeChangedRequest

 
<div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <p class="modal-title" id="myModalLabel">Approve/Deny Request</p>
    </div>

@using (Html.BeginForm("ApproveTime", "RuleBases", FormMethod.Post, new { id = "modalForm" }))
{
    @Html.AntiForgeryToken()

    <div class="modal-body">
        
            <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.SecondsAdded)
                    @Html.HiddenFor(model => model.RuleUsedId)
                    @Html.HiddenFor(model => model.RequestNote)
                    @Html.HiddenFor(model => model.RequestedBy)
                    <div>
                            @*Details here*@
                            <div>
                                    @Html.Encode(@"Rule Used:")
                                    @Html.DisplayFor(model => model.Rule.RuleTitle)
                                </div>
                            <div>
                                    @Html.Encode(@"Time Charged: ")
                                    @Html.Partial("_PendingApprovalTime", Model)
                                </div>
                            <div>
                                    @Html.Encode(@"Request By: ")
                                    @Html.DisplayFor(model => model.RequestedBy)
                                </div>
                            @if (Model.RequestNote != null && !Model.RequestNote.IsEmpty())
                            {
                                <div>
                                        @Html.Encode(@"Request Comment")
                                        @Html.Encode(Model.RequestNote)
                                    </div>
                            }
                            <hr/>
                            <div>
                                    @Html.Encode(@"Approve or deny this requst?")
                                </div>
                            @Html.EditorFor(model => model.IsApproved)
                            @Html.ValidationMessageFor(model => model.IsApproved, "", new {@class = "text-danger"})
                        </div>
                    <hr/>
                    <div >
                            @Html.Encode(@"Comment")
                            <div>
                                    @Html.EditorFor(model => model.ApprovalNote, new { htmlAttributes = new {@class = "note-text-area", placeholder = "Enter a comment (not required)"}})
                                </div>
                            @Html.ValidationMessageFor(model => model.ApprovalNote, "", new {@class = "validation-error-text"})
                        </div>
                </div>
        </div>

    <div class="modal-footer">
            <div class="button-container">
                    <button class="cancel-apply" type="button" data-dismiss="modal">Cancel</button>
                </div>
            <div class="button-container">
                    <button class="confirm-apply" type="submit" id="modal-submit">Submit Choice</button>
                </div>
        </div>
}