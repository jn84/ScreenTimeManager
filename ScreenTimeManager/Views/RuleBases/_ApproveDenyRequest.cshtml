@model ScreenTimeManager.Models.TotalScreenTimeChangedRequest

 
<div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <p class="modal-title" id="myModalLabel">Approve/Deny Request</p>
    </div>

@using (Html.BeginForm("ApproveTime", "RuleBases", FormMethod.Post, new { id = "modalForm" }))
{
    @Html.AntiForgeryToken()

    <div class="modal-body">
        <div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.SecondsAdded)
            @Html.HiddenFor(model => model.RuleUsedId)
            @Html.HiddenFor(model => model.RequestNote)
            @Html.HiddenFor(model => model.RequestedBy)
            <table class="time-change-detail-table">
                <tr>
                    <td class="time-change-detail-cell-title">
                        @Html.Encode(@"Rule Used")
                    </td>
                    <td class="time-change-detail-cell-content">
                        @Html.DisplayFor(m => m.Rule.RuleTitle)
                    </td>
                </tr>
                <tr>
                    <td class="time-change-detail-cell-title">
                        @Html.Encode(@"Rule Description")
                    </td>
                    <td class="time-change-detail-cell-content">
                        @Html.DisplayFor(m => m.Rule.RuleDescription)
                    </td>
                </tr>
                </table>
                <hr/>
            <table class="time-change-detail-table">
                <tr>
                    <td class="time-change-detail-cell-title">
                        @Html.Encode(@"Time Requested")
                    </td>
                    <td class="time-change-detail-cell-content">
                        @Html.DisplayFor(m => m.SecondsAdded)
                    </td>
                </tr>
                <tr>
                    <td class="time-change-detail-cell-title">
                        @Html.Encode(@"Requested")
                    </td>
                    <td class="time-change-detail-cell-content">
                        @Html.DisplayFor(m => m.TimeHistoryDate.EntriesDate)
                        @Html.DisplayFor(m => m.RecordAddedTime)
                    </td>
                </tr>
                <tr>
                    <td class="time-change-detail-cell-title">
                        @Html.Encode(@"Requested By")
                    </td>
                    <td class="time-change-detail-cell-content">
                        <p>@Model.RequestedBy</p>
                    </td>
                </tr>
                @if (!Model.RequestNote.IsEmpty())
                {
                    <tr>
                        <td class="time-change-detail-cell-title">
                            @Html.Encode(@"Request Note")
                        </td>
                        <td class="time-change-detail-cell-content">
                            <p>@Model.RequestNote</p>
                        </td>
                    </tr>
                }
            </table>
            <hr />
            <div>
                <div>
                    @Html.Encode(@"Approve or deny this requst?")
                </div>
                @Html.EditorFor(model => model.IsApproved)
                @Html.ValidationMessageFor(model => model.IsApproved, "", new {@class = "text-danger"})
            </div>
            <div>
                @Html.Encode(@"Comment")
                <div>
                    @Html.EditorFor(model => model.ApprovalNote, new { htmlAttributes = new {@class = "note-text-area", placeholder = "Enter a comment (not required)"}})
                </div>
                @Html.ValidationMessageFor(model => model.ApprovalNote, "", new {@class = "validation-error-text"})
            </div>
        </div>
    </div>


    <div class="modal-footer">
            <div class="button-container">
                    <button class="cancel-apply" type="button" data-dismiss="modal">Cancel</button>
                </div>
            <div class="button-container">
                    <button class="confirm-apply" type="submit" id="modal-submit">Submit Choice</button>
                </div>
        </div>
}