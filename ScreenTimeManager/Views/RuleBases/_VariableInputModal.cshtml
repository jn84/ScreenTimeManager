@using MvcContrib.UI.InputBuilder.Views
@model ScreenTimeManager.Models.TimeSubmission

@{
    Layout = null;
}

@* Reminder: ViewBag has the rule needed it to build this modal. ViewBag.Rule *@

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <p class="modal-title" id="myModalLabel">Confirm Screen Time Change</p>
</div>

@if (Model == null) // TODO: DEBUG CODE
{
    throw new NullReferenceException();
}

@using (Html.BeginForm("ApplyTime", "RuleBases", null, FormMethod.Post, new { id = "modalForm" }))
{
    <div class="modal-body">

        @Html.AntiForgeryToken()
        <p><strong>@ViewBag.Rule.RuleTitle</strong></p>
        <p>@ViewBag.Rule.RuleDescription</p>

        <hr/>

        @Html.HiddenFor(model => model.RuleBaseId, htmlAttributes: new { @class = "modal-input" })

        <div >
            <div>
                @Html.EditorFor(model => model.Hours, new { htmlAttributes = new { @class = "modal-input", min = 0, max = 23, id = "hours-applied" } })
                @Html.LabelFor(model => model.Hours, htmlAttributes: new { @class = "control-label" })    
            </div>
            <div class="validation-message">
                @Html.ValidationMessageFor(model => model.Hours, "", new { @class = "validation-error-text" })
            </div>
        </div>
        <div >
            <div>
                @Html.EditorFor(model => model.Minutes, new { htmlAttributes = new { @class = "modal-input", min = 0, max = 59, id = "minutes-applied" } })
                @Html.LabelFor(model => model.Minutes, htmlAttributes: new { @class = "control-label" })    
            </div>
            <div class="validation-message">
                @Html.ValidationMessageFor(model => model.Minutes, "", new { @class = "validation-error-text" })
            </div>
        </div>

        <hr/>

        <p>Time Charged: <span class="pendingTime" id="pendingTime">0h 0m 0s</span></p>

    </div>

    <div class="modal-footer">
        <div class="button-container">
            <button class="cancel-apply" type="button" data-dismiss="modal">Cancel</button>
        </div>

        <div class="button-container">
            <button class="confirm-apply" type="submit">Apply Rule</button> <!-- TODO: Change to id for javascript on click function-->
        </div>
    </div>
}


