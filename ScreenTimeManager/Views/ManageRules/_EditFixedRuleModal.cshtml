@using ScreenTimeManager.Models.Enums
@model ScreenTimeManager.Models.RuleBase


<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <p class="modal-title" id="myModalLabel">Create New Fixed Rule</p>
</div>

@using (Html.BeginForm("Edit", "ManageRules", FormMethod.Post, htmlAttributes: new { id = "modalForm" }))
{
    <div class="modal-body">

        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.RuleModifier, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.RuleModifier, htmlAttributes: new { @class = "form-control", Value = RuleModifier.Add })
                    @Html.ValidationMessageFor(model => model.RuleModifier, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RuleTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RuleTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RuleTitle, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RuleDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RuleDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RuleDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FixedTimeEarned, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FixedTimeEarned, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FixedTimeEarned, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.HiddenFor(model => model.RuleType, new { Value = RuleType.Fixed })
            @Html.HiddenFor(model => model.VariableRatioNumerator, new { Value = 1 })
            @Html.HiddenFor(model => model.VariableRatioDenominator, new { Value = 1 })
        </div>

    </div>

    <!--Need javascript to submit the form -> Previous code works here. No additional code needed. -->
    <div class="modal-footer">
        <div class="button-container">
            <button class="cancel-apply" type="button" data-dismiss="modal">Cancel</button>
        </div>
        <div class="button-container">
            <button class="confirm-apply" type="submit">Confirm</button> <!-- TODO: Change to id for javascript on click function-->
        </div>
    </div>
}
