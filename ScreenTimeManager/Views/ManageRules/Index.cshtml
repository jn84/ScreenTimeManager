@using ScreenTimeManager.Models.Enums
@model IEnumerable<ScreenTimeManager.Models.RuleBase>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>
@*
    
            NEXT THING IS TO WRITE CODE FOR THE CREATE (GET) METHOD IN THE MANAGERULES CONTROLLER



*@
<p>
    @Html.ActionLink("Create Fixed Rule", "Create", "ManageRules", RuleType.Fixed, htmlAttributes: new { data_modal = "", @class = "link-apply-rule" })
</p>
<p>
    @Html.ActionLink("Create Variable Rule", "Create", "ManageRules", RuleType.Variable, htmlAttributes: new { data_modal = "", @class = "link-apply-rule" })
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.RuleType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RuleTitle)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RuleDescription)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FixedTimeEarned)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VariableRatioNumerator)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VariableRatioDenominator)
        </th>
        <th></th>
    </tr>
    
    <!-- Rules should not actually be deleted. Just marked as no longer in use. Older time changes might need to use their data-->

    @foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.RuleType)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RuleTitle)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RuleDescription)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FixedTimeEarned)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.VariableRatioNumerator)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.VariableRatioDenominator)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>
