@using System.Diagnostics.Eventing.Reader
@using ScreenTimeManager.Helpers
@using ScreenTimeManager.Models.Enums
@model IEnumerable<ScreenTimeManager.Models.RuleBase>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (User.IsInRole("Admin") || User.IsInRole("Parent"))
{
    <p>
        @Html.ActionLink("Create Fixed Rule", "Create", "ManageRules", new {ruleType = (int) RuleType.Fixed}, htmlAttributes: new {data_modal = "", @class = "link-apply-rule"})
    </p>
    <br/>
    <p>
        @Html.ActionLink("Create Variable Rule", "Create", "ManageRules", new {ruleType = (int) RuleType.Variable}, htmlAttributes: new {data_modal = "", @class = "link-apply-rule"})
    </p>
    <br/>
}
<div class="rule-table">
<h1 class="rule-table-header">Fixed Rules</h1>
<table class="rule-table"> @*BOOTSTRAP INFECTING EVERYTHING*@
    <tr>
        <th class="rule-table">
            @Html.DisplayNameFor(model => model.RuleTitle)
        </th>
        <th class ="rule-table">
            @Html.DisplayNameFor(model => model.FixedTimeEarned)
        </th>
        @if (User.IsInRole("Admin") || User.IsInRole("Parent"))
        {
            <th class="rule-table">Options</th>
        }
    </tr>
    
    @foreach (var item in Model.Where(r => r.RuleType == RuleType.Fixed))
    {
        // If the rule is expired, dont show it. It exists only for historical purposes
        // If the rule is hidden, it's a special case rule (such as the timer)
        if (item.IsExpired || item.IsHidden)
        {
            continue;
        }
        <tr class="table-rule-entry">
            <td>
                @Html.DisplayFor(modelItem => item.RuleTitle)
            </td>
            <td>
                <p>@(item.RuleModifier == RuleModifier.Add ? "Adds" : "Deducts") @item.FixedTimeEarned.ToString()</p>
            </td>
            <td class="rule-options-table-cell">
                @Html.ActionLink("Edit", "Edit", "ManageRules", new {id = item.Id }, htmlAttributes: new { data_modal= "", @class = "rule-options-link" } ).If(User.IsInRole("Admin") || User.IsInRole("Parent"))
                @Html.ActionLink("Delete", "Delete", "ManageRules", new { id = item.Id }, htmlAttributes: new { data_modal = "", @class = "rule-options-link delete" }).If(User.IsInRole("Admin") || User.IsInRole("Parent"))
            </td>
        </tr>
    }
</table>
</div>
    <br/>
<div class="rule-table">
    <h1 class="rule-table-header">Variable Rules</h1>
    <table class="rule-table">
        @*BOOTSTRAP INFECTING EVERYTHING*@
        <tr>
            <th class="rule-table">
                @Html.DisplayNameFor(model => model.RuleTitle)
            </th>
            <th class="rule-table">
                <p>Time Earning Ratio</p>
            </th>
            @if (User.IsInRole("Admin") || User.IsInRole("Parent"))
            {
                <th class="rule-table">Options</th> }
        </tr>

        @foreach (var item in Model.Where(r => r.RuleType == RuleType.Variable))
        {
            // If the rule is expired, dont show it. It exists only for historical purposes
            // If the rule is hidden, it's a special case rule (such as the timer)
            if (item.IsExpired || item.IsHidden)
            {
                continue;
            }
            <tr class="table-rule-entry">
                <td>
                    @Html.DisplayFor(modelItem => item.RuleTitle)
                </td>
                <td>
                    <p>@(item.RuleModifier == RuleModifier.Add ? "Earns" : "Deducts") @item.VariableRatioNumerator minutes for every @item.VariableRatioDenominator minutes applied</p>
                </td>
                <td class="rule-options-table-cell">
                    @Html.ActionLink("Edit", "Edit", "ManageRules", new { id = item.Id }, htmlAttributes: new { data_modal = "", @class = "rule-options-link" }).If(User.IsInRole("Admin") || User.IsInRole("Parent"))
                    @Html.ActionLink("Delete", "Delete", "ManageRules", new { id = item.Id }, htmlAttributes: new { data_modal = "", @class = "rule-options-link delete" }).If(User.IsInRole("Admin") || User.IsInRole("Parent"))
                </td>
            </tr>
        }

    </table>
</div>